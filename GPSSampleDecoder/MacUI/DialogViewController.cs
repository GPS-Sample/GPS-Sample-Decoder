// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using DocumentFormat.OpenXml.Wordprocessing;
using GPSSampleDecoder.Static;

namespace GPSSampleDecoder.MacUI
{
	public partial class DialogViewController : NSViewController
	{
      private NSViewController _presentor;
      private string _title;
      private string _message;
      public DialogViewController (IntPtr handle) : base (handle)
		{
		}

      public NSViewController Presentor
      {
         get { return _presentor; }
         set { _presentor = value; }
      }

      public override void ViewDidLoad()
      {
         base.ViewDidLoad();

         // Do any additional setup after loading the view.
         // figure out dark mode
         Console.WriteLine("View did load");
         this.title.StringValue = _title;
         this.message.StringValue = _message;
         
         
      }

      public void SetTitleAndContent(string title, string content)
      {
         _title = title;
         _message = content;
      }

      #region Private Methods
      private void CloseDialog()
      {
         Presentor.DismissViewController(this);
      }
      #endregion

      //#region Custom Actions
      partial void AcceptDialog(Foundation.NSObject sender)
      {
         RaiseDialogAccepted();
         CloseDialog();
      }

      //partial void CancelDialog(Foundation.NSObject sender)
      //{
      //   RaiseDialogCanceled();
      //   CloseDialog();
      //}
      //#endregion

      #region Events
      public EventHandler DialogAccepted;

      internal void RaiseDialogAccepted()
      {
         if (this.DialogAccepted != null)
            try
            {
               this.DialogAccepted(this, EventArgs.Empty);
            }catch(Exception ex)
            {
               Console.WriteLine($"\n\nDIALOG EX {ex}");
            }
            
      }

      public EventHandler DialogCanceled;

      internal void RaiseDialogCanceled()
      {
         if (this.DialogCanceled != null)
            this.DialogCanceled(this, EventArgs.Empty);
      }
      #endregion

   }
}
